steps:
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -e
    set -x
    
    echo "Deploying commit: $_COMMIT_SHA"
    
    # 安裝 SSH 客戶端
    apt-get update && apt-get install -y openssh-client
    
    # 準備 SSH
    mkdir -p /root/.ssh
    chmod 700 /root/.ssh
    gcloud secrets versions access latest --secret=ssh-key > /root/.ssh/id_rsa
    chmod 600 /root/.ssh/id_rsa
    
    # 添加 SSH 密鑰到 known_hosts
    ssh-keyscan -H github.com >> /root/.ssh/known_hosts
    ssh-keyscan -H 35.201.224.207 >> /root/.ssh/known_hosts
    
    # 使用 SSH 連接到虛擬機並執行部署腳本
    ssh -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no lucifer_suriel@35.201.224.207 << EOF
      set -e
      set -x

      # 檢查目錄是否存在，如果不存在則克隆倉庫
      if [ ! -d "/home/lucifer_suriel/cloudbuild_test_control_VM" ]; then
        echo "Directory does not exist. Cloning repository..."
        git clone https://github.com/Gnauk841026/cloudbuild_test_control_VM.git /home/lucifer_suriel/cloudbuild_test_control_VM
      fi

      cd /home/lucifer_suriel/cloudbuild_test_control_VM

      # 顯示當前的 Git 狀態
      git status

      # 獲取最新的更改
      git fetch origin

      # 顯示所有分支
      git branch -a

      # 嘗試檢出指定的 commit
      if git checkout -f $_COMMIT_SHA; then
        echo "Successfully checked out commit $_COMMIT_SHA"
      else
        echo "Failed to checkout commit $_COMMIT_SHA"
        echo "Available commits:"
        git log --oneline -n 10
        exit 1
      fi

      # 安裝 Node.js 和 npm（如果尚未安裝）
      if ! command -v node &> /dev/null; then
        curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
        sudo apt-get install -y nodejs
      fi

      # 安裝 PM2（如果尚未安裝）
      if ! command -v pm2 &> /dev/null; then
        sudo npm install -g pm2
      fi

      # 給予 deploy.sh 執行權限
      chmod +x deploy.sh

      # 執行 deploy.sh 腳本
      ./deploy.sh

      echo "Deployed commit $_COMMIT_SHA"

      # 驗證部署
      if pm2 list | grep -q "cloud-run-demo"; then
        echo "Application is running in PM2."
      else
        echo "Error: Application is not running in PM2!"
        exit 1
      fi

      # 檢查應用是否響應
      if curl -s http://localhost:8080 | grep -q "Hello from Cloud Run!"; then
        echo "Application is responding correctly."
      else
        echo "Error: Application is not responding as expected!"
        exit 1
      fi

      echo "Deployment and validation completed successfully."
    EOF

substitutions:
  _COMMIT_SHA: ${COMMIT_SHA}

timeout: '1200s'
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
